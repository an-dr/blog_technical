<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>i2c on technical_</title><link>https://blog.agramakov.me/tags/i2c/</link><description>Recent content in i2c on technical_</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 21 Jul 2022 20:28:27 +0100</lastBuildDate><atom:link href="https://blog.agramakov.me/tags/i2c/index.xml" rel="self" type="application/rss+xml"/><item><title>CAN Bus and a New Simple Protocol</title><link>https://blog.agramakov.me/posts/2022/07-21-can-bus-and-a-new-simple-protocol/</link><pubDate>Thu, 21 Jul 2022 20:28:27 +0100</pubDate><guid>https://blog.agramakov.me/posts/2022/07-21-can-bus-and-a-new-simple-protocol/</guid><description>&lt;h2 id="not-only-two-wires">Not Only Two Wires&lt;/h2>
&lt;p>Itâ€™s been more than two years already since I started working on my robot Zakhar. The Zakhar 1 was built out of Lego and relied on I2C communication between modules. It was a nightmare because as it turned out each MCU developer has its own understanding of how a developer should interact with the I2C unit. What I wanted from the interface:&lt;/p></description></item></channel></rss>