<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>diy on technical_</title><link>https://blog.agramakov.me/tags/diy/</link><description>Recent content in diy on technical_</description><generator>Hugo</generator><language/><lastBuildDate>Sun, 18 Sep 2022 21:48:21 +0100</lastBuildDate><atom:link href="https://blog.agramakov.me/tags/diy/index.xml" rel="self" type="application/rss+xml"/><item><title>Zakhar Brain Service</title><link>https://blog.agramakov.me/posts/2022/09-18-zakhar-brain-service/</link><pubDate>Sun, 18 Sep 2022 21:48:21 +0100</pubDate><guid>https://blog.agramakov.me/posts/2022/09-18-zakhar-brain-service/</guid><description><p>Yesterday I merged a big software update to the Zakhar&rsquo;s Raspberry Pi Unit -<code>brain_service</code>.</p><p>The update brings a service providing the robot&rsquo;s status (network, OS status) and access to the CAN bus for many simultaneously connected clients. Also, the service tracks the presence of other robot Units on the CAN bus.</p><p>There is another service shipping with the same repository<code>brain_service_display</code>. This service connects to<code>brain_service</code> and shows some important information on a small OLED display:</p><p><img class="img-zoomable" src="screen1.jpg" alt=""/><img class="img-zoomable" src="screen2.jpg" alt=""/><img class="img-zoomable" src="screen3.jpg" alt=""/></p><ul><li>f - Face Unit</li><li>S - Sensor Unit</li><li>m - Wheeled moving platform (&ldquo;Motors&rdquo;)</li><li>t - Service Unit (&ldquo;Tool&rdquo;)</li></ul><p>The service structure is presented below:</p><p><img class="img-zoomable" src="structure.svg" alt=""/></p><p>The service publishes status information and incoming CAN messages to<a href="https://zeromq.org/" target="_blank">ZeroMQ</a> subscribers. The service allows all TCP connections including connections from external machines. See<a href="https://github.com/Zakhar-the-Robot/brain_pycore" target="_blank">brain_pycore</a> for compatible subscriber and client implementation classes.</p><p>Sources:</p><ul><li><a href="https://github.com/Zakhar-the-Robot/brain_service" target="_blank">https://github.com/Zakhar-the-Robot/brain_service</a></li><li><a href="https://github.com/Zakhar-the-Robot/brain_pycore" target="_blank">https://github.com/Zakhar-the-Robot/brain_pycore</a></li></ul></description></item><item><title>Brain Software Architecture</title><link>https://blog.agramakov.me/posts/2022/08-31-brain-software-architecture/</link><pubDate>Wed, 31 Aug 2022 19:58:42 +0100</pubDate><guid>https://blog.agramakov.me/posts/2022/08-31-brain-software-architecture/</guid><description><p>Before updating Alive OS to support<a href="https://zakhar-the-robot.github.io/doc/docs/communication-protocols/canbus/" target="_blank">qCAN (my CANbus-based protocol)</a> I have the last thing to do. To simplify my live in future I need a CAN publisher that can publish messages to many subscribers. My main subscribe of course is AliveOS but also to display information about connected devices I need a second subscriber - a service listening only qCAN Present messages.</p><p>To do it I will use a<a href="https://zeromq.org/" target="_blank">ZeroMQ protocol</a> - an extremely supported and documented for many programming languages standard. I&rsquo;m going to update my brain_service to support the protocol and it will be responsible for all interaction with Raspberry Pi.</p><p><img class="img-zoomable" src="Brain_Structure.png" alt=""/></p><p>Repositories:</p><ul><li><a href="https://github.com/Zakhar-the-Robot/brain_pycore" target="_blank">https://github.com/Zakhar-the-Robot/brain_pycore</a></li><li><a href="https://github.com/Zakhar-the-Robot/brain_service" target="_blank">https://github.com/Zakhar-the-Robot/brain_service</a></li></ul></description></item><item><title>Sensor Unit with qCAN Support is Merged!</title><link>https://blog.agramakov.me/posts/2022/08-17-sensor-unit-with-qcan-support-is-merged/</link><pubDate>Wed, 17 Aug 2022 19:53:46 +0100</pubDate><guid>https://blog.agramakov.me/posts/2022/08-17-sensor-unit-with-qcan-support-is-merged/</guid><description><p><img class="img-zoomable" src="2.jpg" alt=""/></p><p>Updated code for the Sensor Unit with qCAN support is merged and documented!</p><ul><li>Source code:<a href="https://github.com/Zakhar-the-Robot/io_sensors" target="_blank">https://github.com/Zakhar-the-Robot/io_sensors</a></li><li>Documentation:<a href="https://zakhar-the-robot.github.io/doc/docs/systems/io_sensors/" target="_blank">https://zakhar-the-robot.github.io/doc/docs/systems/io_sensors/</a></li></ul><p><img class="img-zoomable" src="1.jpg" alt=""/></p></description></item></channel></rss>