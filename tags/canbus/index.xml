<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>canbus on technical_</title><link>https://blog.agramakov.me/tags/canbus/</link><description>Recent content in canbus on technical_</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 31 Aug 2022 19:58:42 +0100</lastBuildDate><atom:link href="https://blog.agramakov.me/tags/canbus/index.xml" rel="self" type="application/rss+xml"/><item><title>Brain Software Architecture</title><link>https://blog.agramakov.me/posts/2022/08-31-brain-software-architecture/</link><pubDate>Wed, 31 Aug 2022 19:58:42 +0100</pubDate><guid>https://blog.agramakov.me/posts/2022/08-31-brain-software-architecture/</guid><description>&lt;p>Before updating Alive OS to support &lt;a href="https://zakhar-the-robot.github.io/doc/docs/communication-protocols/canbus/" target="_blank">qCAN (my CANbus-based protocol)&lt;/a> I have the last thing to do. To simplify my live in future I need a CAN publisher that can publish messages to many subscribers. My main subscribe of course is AliveOS but also to display information about connected devices I need a second subscriber - a service listening only qCAN Present messages.&lt;/p>
&lt;p>To do it I will use a &lt;a href="https://zeromq.org/" target="_blank">ZeroMQ protocol&lt;/a> - an extremely supported and documented for many programming languages standard. I&amp;rsquo;m going to update my brain_service to support the protocol and it will be responsible for all interaction with Raspberry Pi.&lt;/p></description></item><item><title>Sensor Unit with qCAN Support is Merged!</title><link>https://blog.agramakov.me/posts/2022/08-17-sensor-unit-with-qcan-support-is-merged/</link><pubDate>Wed, 17 Aug 2022 19:53:46 +0100</pubDate><guid>https://blog.agramakov.me/posts/2022/08-17-sensor-unit-with-qcan-support-is-merged/</guid><description>&lt;p>&lt;img class="img-zoomable" src="2.jpg" alt="" />
&lt;/p>
&lt;p>Updated code for the Sensor Unit with qCAN support is merged and documented!&lt;/p>
&lt;ul>
&lt;li>Source code: &lt;a href="https://github.com/Zakhar-the-Robot/io_sensors" target="_blank">https://github.com/Zakhar-the-Robot/io_sensors&lt;/a>&lt;/li>
&lt;li>Documentation: &lt;a href="https://zakhar-the-robot.github.io/doc/docs/systems/io_sensors/" target="_blank">https://zakhar-the-robot.github.io/doc/docs/systems/io_sensors/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>The Wheeled Platform with CAN support is merged!</title><link>https://blog.agramakov.me/posts/2022/08-09-the-wheeled-platform-with-can-support-is-merged/</link><pubDate>Tue, 09 Aug 2022 19:45:42 +0100</pubDate><guid>https://blog.agramakov.me/posts/2022/08-09-the-wheeled-platform-with-can-support-is-merged/</guid><description>&lt;p>A new step in Zakhar global transition to CAN bus is done!&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/0DVqdEvbaGk" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div></description></item><item><title>New Zakhar Face Module</title><link>https://blog.agramakov.me/posts/2022/08-07-new-zakhar-face-module/</link><pubDate>Sun, 07 Aug 2022 21:44:38 +0100</pubDate><guid>https://blog.agramakov.me/posts/2022/08-07-new-zakhar-face-module/</guid><description>&lt;p>&lt;img class="img-zoomable" src="IMG_20220807_210614803.jpg" alt="" />
&lt;/p>
&lt;p>The new Unit is based on the ESP-Wrover-Kit and uses a TJA1050 module for CANbus communication.&lt;/p>
&lt;p>It is compatible with the qCAN protocol (described on the Zakhar main page) and can show 5 facial expressions: Anger (0x32), Sadness (0x34), Pleasure (0x33), a Blink (0x31), and Calm (0x30).&lt;/p></description></item><item><title>CAN Bus and a New Simple Protocol</title><link>https://blog.agramakov.me/posts/2022/07-21-can-bus-and-a-new-simple-protocol/</link><pubDate>Thu, 21 Jul 2022 20:28:27 +0100</pubDate><guid>https://blog.agramakov.me/posts/2022/07-21-can-bus-and-a-new-simple-protocol/</guid><description>&lt;h2 id="not-only-two-wires">Not Only Two Wires&lt;/h2>
&lt;p>Itâ€™s been more than two years already since I started working on my robot Zakhar. The Zakhar 1 was built out of Lego and relied on I2C communication between modules. It was a nightmare because as it turned out each MCU developer has its own understanding of how a developer should interact with the I2C unit. What I wanted from the interface:&lt;/p></description></item></channel></rss>